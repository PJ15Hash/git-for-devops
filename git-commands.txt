Git Commands
git init :- creates an empty repository
git add  :- to bring a file to staged condition from untracked position.
git rm --cached :- to bring the stged condition file to untracked position.
git commit -m "to bring the files to tracked stage from staged position".
git restore filename :- to restore a deleted file from tracked position.

To Push from local computer to github 
git remote add origin https:// :- this command connects the local computer repository to github using personal access token , which is genrated on github.
git remote -v :- to check the remote origin 
git branch :- to check the current branch of the repository. (master on local computer ans main on github).
git status :- this will check the current status of files in repository , so that the code changed according to the time is updated to tracked mode and pushed to github repository.
git push origin master :- push the files to github.

To pull from git hub to local computer
git pull origin master :- this command brings the changes made in github to local computer.
git push origin devoloper :- this command pushes the current branch to the github repository.
git pull origin name-of-the-new-branch :- this pulls the new branch from github to local.

Branching stratergies
git checkout -b filename :- to create a new branch under the master or main branch.
git fetch :- to bring the branch from remote 
git log :- to veiw the log and detailed operations previously done.

Git hooks:-
git hooks are scripts that run automatically before or after events like push, commit, merge 
git hooks are located in .git --> hooks folder-- pre commit , usualy written in shell script or commands.

Git actions
to create ci/cd pipelines , workflows and streamline a entire project 
scripts are written in yaml/yml file in git actions over github 


project " To deploy a static website via s3 bucket"
automate the entire process through git actions 
create a ci cd workflow in github actions
create a aws user in iam 
create a access key and assign it to github repository secret key tab 
create a workflow yml file by selecting aws deployment actions 
edit yml file and declare the aws access key id  and access key , to connect githun to aws bucket
create a s3 bucket  
enable static website hosting and add permissions and bucket policies

go back to github and run the actions
check for error and clear them in streamline.
